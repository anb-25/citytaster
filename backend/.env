# Purpose: Configuration values kept out of code. These are all of the backend environment variables that are utilized for the project. 

# MONGO_*: how to connect to your MongoDB container

# ADMIN_TOKEN: simple “password” for admin API



# ─── MongoDB Connection ───────────────────────────
# Hostname of the MongoDB service defined in docker-compose.yml
MONGO_HOST=mongo

# Port that MongoDB listens on inside Docker
MONGO_PORT=27017

# Name of the MongoDB database your app will use
MONGO_DB=CityTasterDB

# ─── Flask Application Settings ───────────────────
# Run Flask in development mode (enables debug output)
FLASK_ENV=development

# Points Flask to the main app file
FLASK_APP=app.py

# ─── Admin Security ────────────────────────────────
# Token required in the "Authorization" header to upload data
ADMIN_TOKEN=changeme

# Why each variable matters

# MONGO_HOST=mongo
# Refers to the service name mongo in your docker-compose.yml.
# Docker’s internal DNS will resolve this to the MongoDB container’s IP.

# MONGO_PORT=27017
# The default port Mongo listens on inside the container.

# MONGO_DB=citytaster
# The database name your Flask app will read/write.

# FLASK_ENV=development
# Enables hot‐reload and more verbose error messages in Flask.

# FLASK_APP=app.py
# Tells the flask command which file to run.

# ADMIN_TOKEN=changeme
# A simple shared secret.
# When you call any /api/upload/... endpoint, set the header
# Authorization: Bearer changeme
# to prove you’re allowed to add data.

