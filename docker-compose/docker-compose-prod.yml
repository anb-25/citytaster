# Purpose of key sections

# mongo service: Runs MongoDB in its own container.

# volumes: ensures /data/db (where Mongo stores its files) is stored on the Docker host, so your data wonâ€™t vanish when the container restarts.

# backend service: Builds and runs your Flask API.

# env_file: loads secrets and connection info from your .env.

# depends_on: waits for Mongo to be ready.

# frontend service: Builds the React app and serves it via Nginx.

# Maps port 3000 on the host so you can browse to http://localhost:3000.

# volumes: at the bottom defines named volumes used by services.

version: '3.9'

services:
  mongo:
    image: mongo:6.0
    container_name: citytaster-mongo
    restart: always
    environment:
      MONGO_INITDB_DATABASE: ${DB_NAME}        # DB_NAME from .env file
    ports:
      - "27017:27017"                          # Expose only if needed for admin
    volumes:
      - mongo-data:/data/db                    # Persist Mongo data

  backend:
    image: ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/citytaster-backend:latest
    container_name: citytaster-backend
    restart: always
    env_file:
      - ../backend/.env                        # Keep your secrets here
    environment:
      DB_NAME: ${DB_NAME}                      # Set DB name for backend
      MONGO_URI: mongodb://mongo:27017/${DB_NAME}
    ports:
      - "5000:5000"                            # API port
    depends_on:
      - mongo

  frontend:
    image: ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/citytaster-frontend:latest
    container_name: citytaster-frontend
    restart: always
    ports:
      - "80:80"                                # Serve via Nginx on port 80
    depends_on:
      - backend

volumes:
  mongo-data:
    driver: local

# Place this file at: citytaster/docker-compose/docker-compose-prod.yml
# .env file should be in the same directory or referenced absolutely
# Usage from root: docker compose -f docker-compose/docker-compose-prod.yml up -d
