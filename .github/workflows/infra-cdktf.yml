# FILE: .github/workflows/infra-cdktf.yml
# Purpose: CI/CD pipeline for your infra + app images.
# - Uses GitHub OIDC to assume an AWS IAM role (no long-lived keys).
# - Builds & pushes Docker images (backend / frontend) to ECR.
# - Validates your config (VPC/Subnets/SGs) before any infra changes.
# - Synthesizes & deploys the selected CDKTF stack (dev by default).
#
# Safe-by-default:
# - On push to main: deploys DEV only.
# - On manual run: you can choose DEV or PROD (prod is a placeholder until you enable it).
#
# Prereqs:
# - Repo secret: DEPLOY_ROLE_ARN (IAM role ARN that trusts GitHub OIDC).
# - Your repo contains:
#   - infra/cdktf-app/my-cdktf/ (CDKTF app)
#   - scripts/validate-dev.cjs (config validator)
#   - scripts/print-ec2.cjs (post-deploy EC2 DNS helper)
#   - backend/Dockerfile, frontend/Dockerfile (image builds)

name: infra-cdktf

on:
  push:
    branches: [ main ]   # auto-apply dev on merges to main
  workflow_dispatch:
    inputs:
      env:
        description: Environment
        type: choice
        default: dev
        options: [dev, prod]
      action:
        description: Action
        type: choice
        default: apply
        options: [apply, destroy]
      build_images:
        description: Build & push Docker images? (apply only)
        type: boolean
        default: true
        required: false
      confirm:
        description: 'Type DESTROY to confirm (destroy only)'
        required: false

env:
  AWS_REGION: us-east-1
  APP_ROOT: infra/cdktf-app/my-cdktf
  PROJECT: citytaster

jobs:
  # ------------------------------
  # APPLY (deploy) path
  # ------------------------------
  deploy:
    name: Deploy (${{ github.event_name == 'workflow_dispatch' && inputs.env || 'dev' }})
    if: ${{ github.event_name != 'workflow_dispatch' || inputs.action == 'apply' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    concurrency:
      group: ${{ github.workflow }}-apply-${{ github.event_name == 'workflow_dispatch' && inputs.env || 'dev' }}
      cancel-in-progress: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Resolve env/stack
        id: env
        shell: bash
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            ENV="${{ inputs.env }}"
          else
            ENV="dev"
          fi
          echo "env_name=$ENV" >> "$GITHUB_OUTPUT"
          echo "STACK_NAME=${{ env.PROJECT }}-$ENV" >> "$GITHUB_OUTPUT"
