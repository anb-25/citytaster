name: CityTaster Deploy

on:
  push:
    branches: [main]           # Trigger on main branch push
  workflow_dispatch:           # Allow manual trigger via GitHub UI

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1    # Used for AWS CLI
      DB_NAME: CityTasterDB    # Example: exported to container if needed

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Docker Buildx (for multi-platform & cache)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Configure AWS credentials for CLI and Docker access
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # Login to Amazon ECR
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      # Build and push backend image to ECR
      - name: Build and push backend Docker image
        run: |
          ECR_REGISTRY="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com"

          docker buildx build \
            --push \
            --file deployment/Dockerfile.backend \
            --tag "$ECR_REGISTRY/citytaster-backend:latest" \
            ./backend

      # Build and push frontend image to ECR
      - name: Build and push frontend Docker image
        run: |
          ECR_REGISTRY="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com"

          docker buildx build \
            --push \
            --file deployment/Dockerfile.frontend \
            --tag "$ECR_REGISTRY/citytaster-frontend:latest" \
            ./frontend

      # Upload data directory to S3 bucket
      - name: Sync data folder to S3
        run: |
          aws s3 sync ./data s3://${{ secrets.S3_BUCKET_NAME }}/data

      # Deploy remotely to EC2 via SSH
      - name: Deploy on EC2 via SSH
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.EC2_PUBLIC_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd app || (mkdir app && cd app)
            aws s3 sync s3://${{ secrets.S3_BUCKET_NAME }}/data ./data
            aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com
            docker-compose pull
            docker-compose up -d
            docker image prune -af


