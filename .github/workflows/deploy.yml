name: CityTaster Deploy

on:
  push:
    branches: [main]            # Deploy only on main branch changes
  workflow_dispatch:            # Allow manual triggering from the GitHub UI

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1           # The AWS region for all AWS actions in this workflow
      DB_NAME: CityTasterDB           # MongoDB database name, if needed in scripts

    steps:
      # --- Diagnostics: Show Docker version/info ---
      - name: Show Docker version/info
        run: |
          docker version
          docker info

      # --- Checkout code from repo ---
      - name: Checkout code
        uses: actions/checkout@v4

      # --- Configure AWS credentials for subsequent AWS CLI usage ---
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # --- Login to Amazon ECR (Container Registry) ---
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      # --- Build and push backend Docker image ---
      - name: Build and push backend Docker image
        env:
          ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com
        run: |
          docker build -t $ECR_REGISTRY/citytaster-backend:latest ./backend
          docker push $ECR_REGISTRY/citytaster-backend:latest

      # --- Build and push frontend Docker image ---
      - name: Build and push frontend Docker image
        env:
          ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com
        run: |
          docker build -t $ECR_REGISTRY/citytaster-frontend:latest ./frontend
          docker push $ECR_REGISTRY/citytaster-frontend:latest

      # --- Sync CSV data folder to S3 ---
      - name: Sync data folder to S3
        run: |
          aws s3 sync ./data s3://${{ secrets.S3_BUCKET_NAME }}/data

      # --- SSH into EC2 and redeploy containers ---
      # You must add the following secrets in your GitHub repo:
      # EC2_PUBLIC_IP, EC2_SSH_KEY, S3_BUCKET_NAME, AWS_ACCOUNT_ID
      - name: Deploy on EC2 via SSH
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.EC2_PUBLIC_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd app || cd ~/app || mkdir -p app && cd app

            aws s3 sync s3://${{ secrets.S3_BUCKET_NAME }}/data ./data

            aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com

            docker-compose pull
            docker-compose up -d

            docker image prune -af

# -------------------------------------------------------------
# IMPORTANT:
#   - All sensitive info should be set as repository or org secrets, not committed!
#   - The region in ECR_REGISTRY must match AWS_REGION.
#   - Never hardcode sensitive keys, secrets, or private SSH keys in this file.
# -------------------------------------------------------------


