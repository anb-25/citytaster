name: CityTaster Deploy

on:
  push:
    branches: [main]           # Deploy only on main branch changes
  workflow_dispatch:           # Allow manual triggering from the GitHub UI

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1        # AWS region
      DB_NAME: CityTasterDB        # MongoDB DB name, if needed in scripts

    steps:
      # --- Checkout code from repo ---
      - name: Checkout code
        uses: actions/checkout@v4

      # --- Diagnostics: Show Docker version/info ---
      - name: Show Docker version/info
        run: |
          echo "docker binary location:"
          which docker
          echo "docker version:"
          docker version
          echo "docker build help:"
          docker build --help

      # --- Configure AWS credentials for subsequent AWS CLI usage ---
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # --- Login to Amazon ECR (Container Registry) ---
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      # --- Build and push backend Docker image (classic builder, NOT buildx) ---
      - name: Build and push backend Docker image
        env:
          ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com
          DOCKER_BUILDKIT: 0  # Force classic Docker builder!
        run: |
          echo "Building backend image with classic docker build"
          docker build -f deployment/Dockerfile.backend -t $ECR_REGISTRY/citytaster-backend:latest ./backend
          docker push $ECR_REGISTRY/citytaster-backend:latest

      # --- Build and push frontend Docker image (classic builder, NOT buildx) ---
      - name: Build and push frontend Docker image
        env:
          ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com
          DOCKER_BUILDKIT: 0  # Force classic Docker builder!
        run: |
          echo "Building frontend image with classic docker build"
          docker build -f deployment/Dockerfile.frontend -t $ECR_REGISTRY/citytaster-frontend:latest ./frontend
          docker push $ECR_REGISTRY/citytaster-frontend:latest

      # --- Sync CSV data folder to S3 ---
      - name: Sync data folder to S3
        run: |
          aws s3 sync ./data s3://${{ secrets.S3_BUCKET_NAME }}/data

      # --- SSH into EC2 and redeploy containers ---
      - name: Deploy on EC2 via SSH
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.EC2_PUBLIC_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd app || cd ~/app || mkdir -p app && cd app

            aws s3 sync s3://${{ secrets.S3_BUCKET_NAME }}/data ./data

            aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com

            docker-compose pull
            docker-compose up -d

            docker image prune -af

# -------------------------------------------------------------
# IMPORTANT:
#   - Do NOT add docker/setup-buildx-action anywhere!
#   - If you still get buildx errors, something outside this file is affecting your environment.
# -------------------------------------------------------------
