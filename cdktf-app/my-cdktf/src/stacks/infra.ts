// FILE: src/stacks/infra.ts
// Purpose: Root Terraform stack class for Citytaster.
// What:    Configure AWS provider once; call your existing flat HCL in ../infra as a local module;
//          re-expose important outputs so they print after deploy.
// Why:     You keep your .tf files untouched; CDKTF just orchestrates inputs and envs.


import { Construct } from "constructs";
import { TerraformStack, TerraformOutput /*, S3Backend */ } from "cdktf";
import { AwsProvider } from "@cdktf/provider-aws/lib/provider";
import type { EnvConfig } from "./types";

// ðŸ‘‡ generated by `cdktf get` from cdktf.json â†’ terraformModules
import { CitytasterInfra } from "../../.gen/modules/citytaster_infra";


export class InfraStack extends TerraformStack {
  private readonly cfg: EnvConfig;

  constructor(scope: Construct, id: string, cfg: EnvConfig) {
    super(scope, id);
    this.cfg = cfg;

    // Provider (root-only)
    new AwsProvider(this, "aws", {
      region: this.cfg.region,
      profile: this.cfg.profile,
    });

    // Call your HCL module via the generated class.
    // NOTE: variable names are camelCased by the generator.
    const mod = new CitytasterInfra(this, "project_infra", {
      awsRegion:        this.cfg.variables.aws_region,
      instanceType:     this.cfg.variables.instance_type,
      keyName:          this.cfg.variables.key_name,
      dbName:           this.cfg.variables.db_name,
      githubDeployKey:  this.cfg.variables.github_deploy_key, // optional
    });

    // Outputs: HCL `output "x_y"` becomes `xYOutput` in the generated class
    new TerraformOutput(this, "ec2_public_ip",    { value: mod.ec2PublicIpOutput });
    new TerraformOutput(this, "ec2_public_dns",   { value: mod.ec2PublicDnsOutput });
    new TerraformOutput(this, "s3_bucket_name",   { value: mod.s3BucketNameOutput });
    new TerraformOutput(this, "ecr_backend_url",  { value: mod.ecrBackendUrlOutput });
    new TerraformOutput(this, "ecr_frontend_url", { value: mod.ecrFrontendUrlOutput });
    new TerraformOutput(this, "aws_account_id",   { value: mod.awsAccountIdOutput });
  }
}
